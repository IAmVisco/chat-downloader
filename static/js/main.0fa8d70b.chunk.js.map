{"version":3,"sources":["App.tsx","index.tsx"],"names":["fetchRetry","fetchBuilder","window","fetch","backendUrl","process","App","formData","JSON","parse","localStorage","getItem","useForm","defaultValues","scOnly","register","handleSubmit","useState","filter","setFilter","taskId","videoId","setTaskData","error","setError","fetching","setFetching","scData","setScData","filteredScData","setFilteredScData","useEffect","catch","filterRegex","RegExp","filteredData","sc","message","match","author","submitForm","data","a","body","stringify","setItem","method","headers","response","ok","json","Error","id","retryOn","_","__","res","state","retryDelay","then","downloadCSV","blob","url","URL","createObjectURL","document","createElement","style","display","href","download","appendChild","click","revokeObjectURL","remove","Container","fluid","overflowX","Row","Col","Form","className","onSubmit","Group","as","controlId","Control","type","required","tabIndex","placeholder","Button","variant","disabled","Spinner","animation","size","Check","label","Alert","dismissible","onClose","md","length","value","onChange","e","target","textAlign","onClick","Table","hover","map","i","time","toFixed","time_text","amount","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0fa8d70b.chunk.js","sourcesContent":["import fetchBuilder from 'fetch-retry';\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Button, Col, Container, Form, Row, Spinner, Table } from 'react-bootstrap';\nimport { SubmitHandler, useForm } from 'react-hook-form';\n\nconst fetchRetry = fetchBuilder(window.fetch);\nconst backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\n\ninterface SuperChat {\n  time: number;\n  time_text: string;\n  amount: string;\n  author: string | null;\n  message: string | null;\n}\n\ntype FormData = {\n  url: string;\n  scOnly: boolean;\n};\n\nexport const App = () => {\n  const formData = JSON.parse(localStorage.getItem('cachedFormData') || '{}');\n  const { register, handleSubmit } = useForm<FormData>({ defaultValues: { scOnly: true, ...formData } });\n  const [filter, setFilter] = useState('');\n  const [{ taskId, videoId }, setTaskData] = useState<{ taskId?: string; videoId?: string }>({});\n  const [error, setError] = useState<string | null>(null);\n  const [fetching, setFetching] = useState(false);\n  const [scData, setScData] = useState<SuperChat[] | null>(null);\n  const [filteredScData, setFilteredScData] = useState<SuperChat[]>([]);\n\n  useEffect(() => {\n    fetch(backendUrl).catch(() => setError('⚠ Backend unavailable ⚠'));\n  }, []);\n\n  useEffect(() => {\n    const filterRegex = new RegExp(filter, 'i');\n    const filteredData = scData?.filter((sc) =>\n      filter ? (sc.message && sc.message.match(filterRegex)) || (sc.author && sc.author.match(filterRegex)) : sc\n    );\n    setFilteredScData(filteredData || []);\n  }, [scData, filter]);\n\n  const submitForm: SubmitHandler<FormData> = async (data) => {\n    setError(null);\n    setTaskData({});\n    setScData(null);\n    setFetching(true);\n    const body = JSON.stringify(data);\n    localStorage.setItem('cachedFormData', body);\n\n    try {\n      const response = await fetch(`${backendUrl}/chat`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body,\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error?.message);\n      }\n\n      const { id: taskId, videoId } = await response.json();\n      setTaskData({ taskId, videoId });\n      fetchRetry(`${backendUrl}/chat/status/${taskId}`, {\n        retryOn: async (_, __, res) => (await res?.json())?.state === 'SENT',\n        retryDelay: 2000,\n      }).then(async () => {\n        const response = await fetch(`${backendUrl}/chat/${taskId}`);\n        setFetching(false);\n        if (response.ok) setScData(await response.json());\n        else {\n          const error = await response.json();\n          setError(error?.message);\n        }\n      });\n    } catch (e) {\n      setError(e.message);\n      setFetching(false);\n    }\n  };\n\n  const downloadCSV = async () => {\n    const response = await fetch(`${backendUrl}/chat/${taskId}/csv`);\n    if (response.ok) {\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `${taskId}.csv`;\n      document.body.appendChild(a);\n      a.click();\n      URL.revokeObjectURL(url);\n      a.remove();\n    } else {\n      const error = await response.json();\n      setError(error?.message);\n    }\n  };\n\n  return (\n    <Container fluid=\"xl\" style={{ overflowX: 'auto' }}>\n      <Row>\n        <Col>\n          <h1>Chat Downloader</h1>\n          <hr />\n        </Col>\n      </Row>\n      <Form className=\"pb-1 px-2\" onSubmit={handleSubmit(submitForm)}>\n        <Form.Group as={Row} controlId=\"formSearch\">\n          <Col>\n            <Form.Control\n              type=\"search\"\n              className=\"mx-0\"\n              required\n              tabIndex={1}\n              placeholder=\"YouTube Link\"\n              {...register('url')}\n            />\n          </Col>\n          <Button variant=\"primary\" type=\"submit\" className=\"col-3\" tabIndex={3} disabled={fetching}>\n            {fetching ? <Spinner animation=\"border\" size=\"sm\" /> : 'Load'}\n          </Button>\n          <Form.Group as={Row} className=\"my-3\">\n            <Col>\n              <Form.Check type=\"checkbox\" label=\"Super Chats only\" tabIndex={2} {...register('scOnly')} />\n            </Col>\n          </Form.Group>\n        </Form.Group>\n      </Form>\n\n      {error && (\n        <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {scData ? (\n        <>\n          <Row className=\"pb-3\">\n            <Col md={4}>\n              <h3>Chat messages</h3>\n              {scData.length ? (\n                <small>\n                  {filter ? 'Showing' : 'Loading'} {filteredScData.length} messages.\n                </small>\n              ) : (\n                <small>Loaded {scData.length} messages. Maybe try different filters?</small>\n              )}\n            </Col>\n            <Col md={4}>\n              <Form.Control\n                type=\"search\"\n                className=\"mb-4\"\n                placeholder=\"Search author or message...\"\n                value={filter}\n                onChange={(e) => setFilter(e.target.value)}\n              />\n            </Col>\n            <Col md={4} style={{ textAlign: 'right' }}>\n              <Button variant=\"success\" onClick={downloadCSV}>\n                Download CSV\n              </Button>\n            </Col>\n          </Row>\n\n          <Table variant=\"dark\" hover>\n            <thead>\n              <tr>\n                <th>Time</th>\n                <th>Amount</th>\n                <th>Author</th>\n                <th>Message</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredScData.map((sc, i) => (\n                <tr key={i}>\n                  <td>\n                    <a href={`https://youtu.be/${videoId}?t=${sc.time > 0 ? sc.time.toFixed(0) : 0}`}>{sc.time_text}</a>\n                  </td>\n                  <td>{sc.amount || '-'}</td>\n                  <td>{sc.author}</td>\n                  <td>{sc.message || ''}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      ) : null}\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}