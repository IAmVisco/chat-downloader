{"version":3,"sources":["App.tsx","index.tsx"],"names":["LOAD_LIMIT","fetchRetry","fetchBuilder","window","fetch","backendUrl","process","getHostLink","msg","host","videoId","time","toFixed","App","formData","JSON","parse","localStorage","getItem","useForm","defaultValues","scOnly","register","handleSubmit","useState","filter","setFilter","taskId","setTaskData","error","setError","fetching","setFetching","chatData","setChatData","filteredChatData","setFilteredChatData","showExtended","setShowExtended","useEffect","catch","filterRegex","RegExp","filteredData","sc","message","match","author","submitForm","data","a","body","stringify","setItem","method","headers","response","ok","json","Error","id","retryOn","_","__","res","state","retryDelay","then","downloadCSV","blob","url","URL","createObjectURL","document","createElement","style","display","href","download","appendChild","click","revokeObjectURL","remove","Container","fluid","overflowX","Row","Col","Form","className","onSubmit","Group","as","controlId","Control","type","required","tabIndex","placeholder","Button","variant","disabled","Spinner","animation","size","Check","label","Alert","dismissible","onClose","md","length","onClick","value","onChange","e","target","textAlign","Table","hover","map","rel","time_text","amount","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.01e215dc.chunk.js","sourcesContent":["import fetchBuilder from 'fetch-retry';\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Button, Col, Container, Form, Row, Spinner, Table } from 'react-bootstrap';\nimport { SubmitHandler, useForm } from 'react-hook-form';\n\nconst LOAD_LIMIT = 2000;\nconst fetchRetry = fetchBuilder(window.fetch);\nconst backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\n\ninterface ChatMessage {\n  time: number;\n  time_text: string;\n  amount: string;\n  author: string | null;\n  message: string | null;\n}\n\ninterface FormData {\n  url: string;\n  scOnly: boolean;\n}\n\ninterface TaskData {\n  taskId?: string;\n  videoId?: string;\n  host?: string;\n}\n\nconst getHostLink = (msg: ChatMessage, host: string, videoId: string): string => {\n  switch (host) {\n    case 'youtu.be':\n      return `https://youtu.be/${videoId}?t=${msg.time > 0 ? msg.time.toFixed(0) : 0}`;\n    case 'twitch.tv':\n      return `https://twitch.tv/videos/${videoId}?t=${msg.time > 0 ? msg.time.toFixed(0) : 0}s`;\n    default:\n      return '';\n  }\n};\n\nexport const App = () => {\n  const formData = JSON.parse(localStorage.getItem('cachedFormData') || '{}');\n  const { register, handleSubmit } = useForm<FormData>({ defaultValues: { scOnly: true, ...formData } });\n  const [filter, setFilter] = useState('');\n  const [{ taskId, videoId, host }, setTaskData] = useState<TaskData>({});\n  const [error, setError] = useState<string | null>(null);\n  const [fetching, setFetching] = useState(false);\n  const [chatData, setChatData] = useState<ChatMessage[] | null>(null);\n  const [filteredChatData, setFilteredChatData] = useState<ChatMessage[]>([]);\n  const [showExtended, setShowExtended] = useState(false);\n\n  useEffect(() => {\n    fetch(backendUrl).catch(() => setError('⚠ Backend unavailable ⚠'));\n  }, []);\n\n  useEffect(() => {\n    const filterRegex = new RegExp(filter, 'i');\n    const filteredData = chatData?.filter((sc) =>\n      filter ? (sc.message && sc.message.match(filterRegex)) || (sc.author && sc.author.match(filterRegex)) : sc\n    );\n    setFilteredChatData(filteredData || []);\n  }, [chatData, filter]);\n\n  const submitForm: SubmitHandler<FormData> = async (data) => {\n    setError(null);\n    setTaskData({});\n    setChatData(null);\n    setFetching(true);\n    setShowExtended(false);\n    const body = JSON.stringify(data);\n    localStorage.setItem('cachedFormData', body);\n\n    try {\n      const response = await fetch(`${backendUrl}/chat`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body,\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error?.message);\n      }\n\n      const { id: taskId, videoId, host } = await response.json();\n      setTaskData({ taskId, videoId, host });\n      fetchRetry(`${backendUrl}/chat/status/${taskId}`, {\n        retryOn: async (_, __, res) => (await res?.json())?.state === 'SENT',\n        retryDelay: 2000,\n      }).then(async () => {\n        const response = await fetch(`${backendUrl}/chat/${taskId}`);\n        setFetching(false);\n        if (response.ok) setChatData(await response.json());\n        else {\n          const error = await response.json();\n          setError(error?.message);\n        }\n      });\n    } catch (e) {\n      setError(e.message);\n      setFetching(false);\n    }\n  };\n\n  const downloadCSV = async () => {\n    const response = await fetch(`${backendUrl}/chat/${taskId}/csv`);\n    if (response.ok) {\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `${taskId}.csv`;\n      document.body.appendChild(a);\n      a.click();\n      URL.revokeObjectURL(url);\n      a.remove();\n    } else {\n      const error = await response.json();\n      setError(error?.message);\n    }\n  };\n\n  return (\n    <Container fluid=\"xl\" style={{ overflowX: 'auto' }}>\n      <Row>\n        <Col>\n          <h1>Chat Downloader</h1>\n          <hr />\n        </Col>\n      </Row>\n      <Form className=\"pb-1 px-2\" onSubmit={handleSubmit(submitForm)}>\n        <Form.Group as={Row} controlId=\"formSearch\">\n          <Col>\n            <Form.Control\n              type=\"search\"\n              className=\"mx-0\"\n              required\n              tabIndex={1}\n              placeholder=\"YouTube Link\"\n              {...register('url')}\n            />\n          </Col>\n          <Button variant=\"primary\" type=\"submit\" className=\"col-3\" tabIndex={3} disabled={fetching}>\n            {fetching ? <Spinner animation=\"border\" size=\"sm\" /> : 'Load'}\n          </Button>\n          <Form.Group as={Row} className=\"my-3\">\n            <Col>\n              <Form.Check type=\"checkbox\" label=\"Super Chats only\" tabIndex={2} {...register('scOnly')} />\n            </Col>\n          </Form.Group>\n        </Form.Group>\n      </Form>\n\n      {error && (\n        <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {chatData ? (\n        <>\n          <Row className=\"pb-3\">\n            <Col md={4}>\n              <h3>Chat messages</h3>\n              {chatData.length ? (\n                <small>\n                  {filter ? 'Showing' : 'Loaded'} {filteredChatData.length} messages.\n                  {chatData.length > LOAD_LIMIT &&\n                    !showExtended &&\n                    ` Preview for more than ${LOAD_LIMIT} messages is disabled by default. `}\n                  {chatData.length > LOAD_LIMIT && !showExtended && (\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                    <a href=\"#\" onClick={() => setShowExtended(true)}>\n                      Load anyway\n                    </a>\n                  )}\n                </small>\n              ) : (\n                <small>Loaded {chatData.length} messages. Maybe try different filters?</small>\n              )}\n            </Col>\n            <Col md={4}>\n              <Form.Control\n                type=\"search\"\n                className=\"mb-4\"\n                placeholder=\"Search author or message...\"\n                value={filter}\n                onChange={(e) => setFilter(e.target.value)}\n              />\n            </Col>\n            <Col md={4} style={{ textAlign: 'right' }}>\n              <Button variant=\"success\" onClick={downloadCSV}>\n                Download CSV\n              </Button>\n            </Col>\n          </Row>\n\n          {((chatData.length > LOAD_LIMIT && showExtended) || chatData.length < LOAD_LIMIT) && (\n            <Table variant=\"dark\" hover>\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>Amount</th>\n                  <th>Author</th>\n                  <th>Message</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredChatData.map((msg) => (\n                  <tr>\n                    <td>\n                      <a href={getHostLink(msg, host!, videoId!)} target=\"_blank\" rel=\"noreferrer\">\n                        {msg.time_text}\n                      </a>\n                    </td>\n                    <td>{msg.amount || '-'}</td>\n                    <td>{msg.author}</td>\n                    <td>{msg.message || ''}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </>\n      ) : null}\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}